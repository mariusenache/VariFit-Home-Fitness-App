// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VariFit00.DataAccess.Data;

#nullable disable

namespace VariFit00.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240531124444_addfavoriteworkoutsmanytomany")]
    partial class addfavoriteworkoutsmanytomany
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("VariFit00.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bodyweight"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dumbbell"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Barbell"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Kettlebell"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Band"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Bench"
                        });
                });

            modelBuilder.Entity("VariFit00.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EquipmentId = 2,
                            Level = 3,
                            Name = "Xbody_hammer_curl"
                        },
                        new
                        {
                            Id = 2,
                            EquipmentId = 2,
                            Level = 4,
                            Name = "Db_trifecta"
                        },
                        new
                        {
                            Id = 3,
                            EquipmentId = 2,
                            Level = 2,
                            Name = "Standing_curl"
                        },
                        new
                        {
                            Id = 4,
                            EquipmentId = 2,
                            Level = 3,
                            Name = "Alternate_st_curl"
                        },
                        new
                        {
                            Id = 5,
                            EquipmentId = 2,
                            Level = 2,
                            Name = "Lying_tricep_ext"
                        },
                        new
                        {
                            Id = 6,
                            EquipmentId = 2,
                            Level = 1,
                            Name = "Tricep_kickback"
                        },
                        new
                        {
                            Id = 7,
                            EquipmentId = 2,
                            Level = 2,
                            Name = "Bench_dip"
                        },
                        new
                        {
                            Id = 8,
                            EquipmentId = 1,
                            Level = 1,
                            Name = "Close_grip_db_pushup"
                        },
                        new
                        {
                            Id = 9,
                            EquipmentId = 1,
                            Level = 2,
                            Name = "Cobra_pushup"
                        },
                        new
                        {
                            Id = 10,
                            EquipmentId = 1,
                            Level = 1,
                            Name = "Pushup"
                        },
                        new
                        {
                            Id = 11,
                            EquipmentId = 2,
                            Level = 3,
                            Name = "Floor_fly"
                        },
                        new
                        {
                            Id = 12,
                            EquipmentId = 2,
                            Level = 2,
                            Name = "Underhand_press"
                        },
                        new
                        {
                            Id = 13,
                            EquipmentId = 1,
                            Level = 1,
                            Name = "Decline_pushup"
                        },
                        new
                        {
                            Id = 14,
                            EquipmentId = 2,
                            Level = 3,
                            Name = "Ucv_raise"
                        },
                        new
                        {
                            Id = 15,
                            EquipmentId = 2,
                            Level = 3,
                            Name = "Overhead_press"
                        },
                        new
                        {
                            Id = 16,
                            EquipmentId = 2,
                            Level = 2,
                            Name = "Hip_hugger"
                        },
                        new
                        {
                            Id = 17,
                            EquipmentId = 2,
                            Level = 3,
                            Name = "Lateral_raise"
                        },
                        new
                        {
                            Id = 18,
                            EquipmentId = 2,
                            Level = 2,
                            Name = "Front_raise"
                        },
                        new
                        {
                            Id = 19,
                            EquipmentId = 2,
                            Level = 4,
                            Name = "Scoop_press"
                        },
                        new
                        {
                            Id = 20,
                            EquipmentId = 2,
                            Level = 3,
                            Name = "Reverse_fly"
                        },
                        new
                        {
                            Id = 21,
                            EquipmentId = 2,
                            Level = 2,
                            Name = "Figure_8"
                        },
                        new
                        {
                            Id = 22,
                            EquipmentId = 2,
                            Level = 3,
                            Name = "Press_out"
                        },
                        new
                        {
                            Id = 23,
                            EquipmentId = 2,
                            Level = 3,
                            Name = "Renegade_row"
                        },
                        new
                        {
                            Id = 24,
                            EquipmentId = 2,
                            Level = 4,
                            Name = "Tripod_row"
                        },
                        new
                        {
                            Id = 25,
                            EquipmentId = 2,
                            Level = 3,
                            Name = "High_pull"
                        },
                        new
                        {
                            Id = 26,
                            EquipmentId = 2,
                            Level = 4,
                            Name = "Man_maker"
                        },
                        new
                        {
                            Id = 27,
                            EquipmentId = 2,
                            Level = 2,
                            Name = "W_raise"
                        },
                        new
                        {
                            Id = 28,
                            EquipmentId = 2,
                            Level = 3,
                            Name = "Standing_row"
                        },
                        new
                        {
                            Id = 29,
                            EquipmentId = 1,
                            Level = 3,
                            Name = "Bulgarian_split_squat"
                        },
                        new
                        {
                            Id = 30,
                            EquipmentId = 1,
                            Level = 3,
                            Name = "Reverse_lunge"
                        },
                        new
                        {
                            Id = 31,
                            EquipmentId = 1,
                            Level = 4,
                            Name = "Squat"
                        },
                        new
                        {
                            Id = 32,
                            EquipmentId = 1,
                            Level = 2,
                            Name = "Calf_raise"
                        },
                        new
                        {
                            Id = 33,
                            EquipmentId = 1,
                            Level = 5,
                            Name = "Never_ending_squat"
                        },
                        new
                        {
                            Id = 34,
                            EquipmentId = 1,
                            Level = 4,
                            Name = "Reverse_creeping_lunge"
                        },
                        new
                        {
                            Id = 35,
                            EquipmentId = 3,
                            Level = 5,
                            Name = "Deadlift"
                        },
                        new
                        {
                            Id = 36,
                            EquipmentId = 1,
                            Level = 3,
                            Name = "Lunge"
                        },
                        new
                        {
                            Id = 37,
                            EquipmentId = 1,
                            Level = 2,
                            Name = "Reverse_crunch"
                        },
                        new
                        {
                            Id = 38,
                            EquipmentId = 1,
                            Level = 3,
                            Name = "Mountain_climber"
                        },
                        new
                        {
                            Id = 39,
                            EquipmentId = 1,
                            Level = 2,
                            Name = "Halos"
                        },
                        new
                        {
                            Id = 40,
                            EquipmentId = 1,
                            Level = 1,
                            Name = "Crunch"
                        });
                });

            modelBuilder.Entity("VariFit00.Models.Muscle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GroupOfMuscle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Muscles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GroupOfMuscle = "Arms",
                            Name = "Bicep"
                        },
                        new
                        {
                            Id = 2,
                            GroupOfMuscle = "Arms",
                            Name = "Tricep"
                        },
                        new
                        {
                            Id = 3,
                            GroupOfMuscle = "Chest",
                            Name = "Chest"
                        },
                        new
                        {
                            Id = 4,
                            GroupOfMuscle = "Back",
                            Name = "Shoulders"
                        },
                        new
                        {
                            Id = 5,
                            GroupOfMuscle = "Back",
                            Name = "Traps"
                        },
                        new
                        {
                            Id = 6,
                            GroupOfMuscle = "Back",
                            Name = "Back"
                        },
                        new
                        {
                            Id = 7,
                            GroupOfMuscle = "Legs",
                            Name = "Quadriceps"
                        },
                        new
                        {
                            Id = 8,
                            GroupOfMuscle = "Legs",
                            Name = "Glutes"
                        },
                        new
                        {
                            Id = 9,
                            GroupOfMuscle = "Legs",
                            Name = "Hamstrings"
                        },
                        new
                        {
                            Id = 10,
                            GroupOfMuscle = "Legs",
                            Name = "Calves"
                        },
                        new
                        {
                            Id = 11,
                            GroupOfMuscle = "Core",
                            Name = "Abs"
                        });
                });

            modelBuilder.Entity("VariFit00.Models.MuscleExercise", b =>
                {
                    b.Property<int>("MuscleId")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("int");

                    b.HasKey("MuscleId", "ExerciseId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("MuscleExercises");

                    b.HasData(
                        new
                        {
                            MuscleId = 1,
                            ExerciseId = 1
                        },
                        new
                        {
                            MuscleId = 1,
                            ExerciseId = 2
                        },
                        new
                        {
                            MuscleId = 1,
                            ExerciseId = 3
                        },
                        new
                        {
                            MuscleId = 1,
                            ExerciseId = 4
                        },
                        new
                        {
                            MuscleId = 2,
                            ExerciseId = 5
                        },
                        new
                        {
                            MuscleId = 2,
                            ExerciseId = 6
                        },
                        new
                        {
                            MuscleId = 2,
                            ExerciseId = 7
                        },
                        new
                        {
                            MuscleId = 2,
                            ExerciseId = 8
                        },
                        new
                        {
                            MuscleId = 2,
                            ExerciseId = 9
                        },
                        new
                        {
                            MuscleId = 2,
                            ExerciseId = 10
                        },
                        new
                        {
                            MuscleId = 3,
                            ExerciseId = 8
                        },
                        new
                        {
                            MuscleId = 3,
                            ExerciseId = 10
                        },
                        new
                        {
                            MuscleId = 3,
                            ExerciseId = 11
                        },
                        new
                        {
                            MuscleId = 3,
                            ExerciseId = 12
                        },
                        new
                        {
                            MuscleId = 3,
                            ExerciseId = 13
                        },
                        new
                        {
                            MuscleId = 3,
                            ExerciseId = 14
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 10
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 11
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 13
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 14
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 15
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 16
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 17
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 18
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 19
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 20
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 21
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 22
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 23
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 25
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 26
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 27
                        },
                        new
                        {
                            MuscleId = 4,
                            ExerciseId = 28
                        },
                        new
                        {
                            MuscleId = 5,
                            ExerciseId = 14
                        },
                        new
                        {
                            MuscleId = 5,
                            ExerciseId = 17
                        },
                        new
                        {
                            MuscleId = 6,
                            ExerciseId = 14
                        },
                        new
                        {
                            MuscleId = 6,
                            ExerciseId = 23
                        },
                        new
                        {
                            MuscleId = 6,
                            ExerciseId = 24
                        },
                        new
                        {
                            MuscleId = 6,
                            ExerciseId = 25
                        },
                        new
                        {
                            MuscleId = 6,
                            ExerciseId = 26
                        },
                        new
                        {
                            MuscleId = 6,
                            ExerciseId = 28
                        },
                        new
                        {
                            MuscleId = 7,
                            ExerciseId = 29
                        },
                        new
                        {
                            MuscleId = 7,
                            ExerciseId = 30
                        },
                        new
                        {
                            MuscleId = 7,
                            ExerciseId = 31
                        },
                        new
                        {
                            MuscleId = 7,
                            ExerciseId = 33
                        },
                        new
                        {
                            MuscleId = 8,
                            ExerciseId = 31
                        },
                        new
                        {
                            MuscleId = 9,
                            ExerciseId = 32
                        },
                        new
                        {
                            MuscleId = 9,
                            ExerciseId = 34
                        },
                        new
                        {
                            MuscleId = 9,
                            ExerciseId = 35
                        },
                        new
                        {
                            MuscleId = 10,
                            ExerciseId = 32
                        },
                        new
                        {
                            MuscleId = 11,
                            ExerciseId = 36
                        },
                        new
                        {
                            MuscleId = 11,
                            ExerciseId = 37
                        },
                        new
                        {
                            MuscleId = 11,
                            ExerciseId = 38
                        },
                        new
                        {
                            MuscleId = 11,
                            ExerciseId = 39
                        },
                        new
                        {
                            MuscleId = 11,
                            ExerciseId = 40
                        });
                });

            modelBuilder.Entity("VariFit00.Models.UserFavoriteWorkout", b =>
                {
                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("ApplicationUserId", "WorkoutId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("UserFavoriteWorkouts");
                });

            modelBuilder.Entity("VariFit00.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentChosenIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentChosenNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("MusclesTargetedIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusclesTargetedNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("VariFit00.Models.WorkoutExercise", b =>
                {
                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.HasKey("WorkoutId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("WorkoutExercises");
                });

            modelBuilder.Entity("VariFit00.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VariFit00.Models.Exercise", b =>
                {
                    b.HasOne("VariFit00.Models.Equipment", "Equipment")
                        .WithMany("Exercises")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("VariFit00.Models.MuscleExercise", b =>
                {
                    b.HasOne("VariFit00.Models.Equipment", null)
                        .WithMany("MuscleExercises")
                        .HasForeignKey("EquipmentId");

                    b.HasOne("VariFit00.Models.Exercise", "Exercise")
                        .WithMany("MuscleExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VariFit00.Models.Muscle", "Muscle")
                        .WithMany("MuscleExercises")
                        .HasForeignKey("MuscleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Muscle");
                });

            modelBuilder.Entity("VariFit00.Models.UserFavoriteWorkout", b =>
                {
                    b.HasOne("VariFit00.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("UserFavoriteWorkouts")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VariFit00.Models.Workout", "Workout")
                        .WithMany("UserFavoriteWorkouts")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("VariFit00.Models.Workout", b =>
                {
                    b.HasOne("VariFit00.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("VariFit00.Models.WorkoutExercise", b =>
                {
                    b.HasOne("VariFit00.Models.Exercise", "Exercise")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VariFit00.Models.Workout", "Workout")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("VariFit00.Models.Equipment", b =>
                {
                    b.Navigation("Exercises");

                    b.Navigation("MuscleExercises");
                });

            modelBuilder.Entity("VariFit00.Models.Exercise", b =>
                {
                    b.Navigation("MuscleExercises");

                    b.Navigation("WorkoutExercises");
                });

            modelBuilder.Entity("VariFit00.Models.Muscle", b =>
                {
                    b.Navigation("MuscleExercises");
                });

            modelBuilder.Entity("VariFit00.Models.Workout", b =>
                {
                    b.Navigation("UserFavoriteWorkouts");

                    b.Navigation("WorkoutExercises");
                });

            modelBuilder.Entity("VariFit00.Models.ApplicationUser", b =>
                {
                    b.Navigation("UserFavoriteWorkouts");
                });
#pragma warning restore 612, 618
        }
    }
}
